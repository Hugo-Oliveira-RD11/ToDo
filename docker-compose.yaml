services:
  web:
    image: nginx
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    environment:
      - NGINX_PORT=80
    depends_on:
        - app1
        - app2
    networks:
        - redinha

  app1:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgres
      - mongo
      - redis_refresh_token
    networks:
      - redinha

  app2:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgres
      - mongo
      - redis_refresh_token
    networks:
      - redinha

  postgres:
    container_name: postgres
    image: postgres:17.4
    environment:
      POSTGRES_USER: tests
      POSTGRES_PASSWORD: test12345
      POSTGRES_DB: UsersDB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - redinha

  mongo:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - redinha

  redis_refresh_token:
    container_name: redis_token
    image: redis:7.4.2-alpine
    environment:
      REDIS_PASSWORD: redisRefresh
    networks:
      - redinha
    ports:
    - "6379:6379"

volumes:
  postgres_data:
  mongo_data:

networks:
  redinha:
